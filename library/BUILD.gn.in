import("args.gni")
import("//build/buildflag_header.gni")

buildflag_header("ipfs_buildflags") {
  header = "ipfs_buildflags.h"
  flags = [ "ENABLE_IPFS=$enable_ipfs" ]
}

config("external_config") {
  include_dirs = [
    "include",
  ]
}

if (enable_ipfs) {
    cxx_sources = [
@gn_sources@
    ]
    static_library("ipfs_client") {
      if (is_nacl) {
        sources = cxx_sources - [
            "src/ipfs_client/dag_block.cc",
            "src/ipfs_client/gw/gateway_request.cc",
            "src/ipfs_client/gw/gateway_http_requestor.cc",
            "src/ipfs_client/gw/requestor.cc",
            "src/ipfs_client/ipld/dag_node.cc",
            "src/ipfs_client/ipns_names.cc",
            "src/ipfs_client/ipns_record.cc",
            "src/ipfs_client/logger.cc",
            "src/ipfs_client/signing_key_type.cc",
          ]
      } else {
        sources = cxx_sources
      }
      include_dirs = [
        "include",
        "src",
        "..",
        "../boringssl/src/include"
      ]
      public_configs = [
        ":external_config"
      ]
      public_deps = [
        "//third_party/abseil-cpp:absl",
        "//base",
      ]
      deps = [
        "//third_party/abseil-cpp:absl",
        "//base",
      ]
      if (!is_nacl) {
        public_deps += [
            ":protos",
            "//third_party/protobuf:protobuf_lite",
          ]
      }
    }
}

import("//third_party/protobuf/proto_library.gni")

proto_library("protos") {
  sources = [
@gn_protos@
  ]
}
