
find_program(CCACHE_EXECUTABLE ccache)
set(chromium_build_dir "${CHROMIUM_SOURCE_TREE}/out/${CHROMIUM_PROFILE}")
cmake_host_system_information(RESULT core_count QUERY NUMBER_OF_PHYSICAL_CORES)
if(core_count GREATER 16)
  if("${CHROMIUM_PROFILE}" STREQUAL "win")
    set(core_count 8)
  else()
    math(EXPR core_count "${core_count} / 2")
  endif()
elseif(core_count GREATER 1)
  math(EXPR core_count "${core_count} * 2 / 3")
endif()
set(parallel_jobs ${core_count} CACHE STRING "The number of parallel jobs chromium build commands should use.")
set(gnargs " enable_ipfs=true ")
if("${CHROMIUM_PROFILE}" STREQUAL "win")
  message(STATUS "Don't use ccache with clang-cl")
elseif(CCACHE_EXECUTABLE)
  set(gnargs " ${gnargs} cc_wrapper=\"${CCACHE_EXECUTABLE}\" ")
endif()
if(CMAKE_BUILD_TYPE STREQUAL Release)
  set(gnargs " ${gnargs} is_debug=false  is_component_build=false ")
  if(NOT EXISTS "${CHROMIUM_SOURCE_TREE}/electron")
    set(gnargs " ${gnargs} dcheck_always_on=false ")
  endif()
elseif(CMAKE_BUILD_TYPE STREQUAL Debug)
  set(gnargs " ${gnargs} is_debug=true  dcheck_always_on=true symbol_level=2 ")
  message(STATUS "Will build Chromium also in debug mode. Note, this has performance implications.")
else()
  message(FATAL_ERROR "Please choose either Debug or Release for CMAKE_BUILD_TYPE (was '${CMAKE_BUILD_TYPE}').")
endif()
if("${CHROMIUM_PROFILE}" STREQUAL "win")
  set(gnargs " ${gnargs} target_os=\"win\" target_cpu=\"x64\" treat_warnings_as_errors=false ")
endif()
if("${CMAKE_SYSTEM_NAME}" STREQUAL "Darwin")
  set(gnargs " ${gnargs} mac_deployment_target=\"13.0\" treat_warnings_as_errors=false ")
endif()
set(GN_ARGS "${gnargs}" CACHE STRING "Args to gn gen")
